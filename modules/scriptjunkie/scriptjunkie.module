<?php
/**
 * @file
 * Drupal Module: scriptjunkie
 * Allows users to easily add scripts or code on the bottoms of Drupal pages
 * from within the admin menu.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function scriptjunkie_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the scriptjunke module.
    case 'help.page.scriptjunke':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Allows you to easily add scripts or tracking code from the administration interface to the bottom of your site\'s pages') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_page_attachments().
 */
function scriptjunkie_page_attachments(array &$attachments) {
  // Get the ScriptJunkie Storage service.
  $scriptjunkie_storage = \Drupal::service('scriptjunkie.scriptjunkie_storage');
  // Get the ScriptJunkie Manager service.
  $scriptjunkie = \Drupal::service('scriptjunkie.manager');
  // Get all header scripts.
  $scripts = $scriptjunkie_storage->scriptJunkieGetScripts(['scope' => 'header']);
  // Get the current user.
  $user = \Drupal::currentUser();
  // Add AddToAny initial JS config.
  foreach ($scripts as $name => $script) {
    // 1. Check if the script input field number has a value.
    // 2. Add code based on visibility value.
    // 3. Check if we should add the JS for the currently active user's role.
    if (!empty($script['script']) && $scriptjunkie->checkPageVisibility($script) && $scriptjunkie->checkUserVisibility($user, $script)) {
      $attachments['#attached']['html_head'][] = [
        [
          '#tag' => 'script',
          '#attributes' => [
            'language' => "javascript",
            'type' => "text/javascript",
          ],
          '#value' => \Drupal\Core\Render\Markup::create($script['script'])
            ->__toString(),
          '#weight' => 10,
          '#prefix' => '<!-- scriptjunkie ' . $script['name'] . ' -->',
          '#suffix' => '<!-- /scriptjunkie ' . $script['name'] . ' -->',
        ],
        // A key, to make it possible to recognize this HTML <HEAD>
        // element when altering.
        $script['name'],
      ];
    }
  }
}

/**
 * Implements hook_page_bottom().
 *
 * Adds the Script on the bottom of the page.
 *
 * Note: Inline JavaScript is highly discouraged. It's recommended to put the
 * JS you want to use inline in a file instead, because that allows that
 * JavaScript to be cached on the client side. It also allows JavaScript code
 * to be reviewed and linted.
 */
function scriptjunkie_page_bottom(array &$page_bottom) {
  // Get the ScriptJunkie Storage service.
  $scriptjunkie_storage = \Drupal::service('scriptjunkie.scriptjunkie_storage');
  // Get the ScriptJunkie Manager service.
  $scriptjunkie = \Drupal::service('scriptjunkie.manager');
  // Get all the footer scripts.
  $scripts = $scriptjunkie_storage->scriptJunkieGetScripts(['scope' => 'footer']);
  // Get the current user.
  $user = \Drupal::currentUser();
  $bottom_scripts = '';
  foreach ($scripts as $name => $script) {
    // 1. Check if the script input field number has a value.
    // 2. Add code based on visibility value.
    // 3. Check if we should add the JS for the currently active user's role.
    if (!empty($script['script']) && $scriptjunkie->checkPageVisibility($script) && $scriptjunkie->checkUserVisibility($user, $script)) {
      $bottom_scripts .= '<!-- scriptjunkie ' . $script['name'] . ' -->';
      $bottom_scripts .= \Drupal\Core\Render\Markup::create($script['script']);
      $bottom_scripts .= '<!-- /scriptjunkie ' . $script['name'] . ' -->';
    }
  }
  $page_bottom['scriptjunkie']['#markup'] = $bottom_scripts;
  $page_bottom['scriptjunkie']['#allowed_tags'] = ['script'];
}
